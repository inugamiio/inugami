{"version":3,"file":"chips.js","sourceRoot":"","sources":["chips.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,AfterContentInit,ContentChildren,QueryList,TemplateRef,IterableDiffers,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,PrimeTemplate} from '../common/shared';\nimport {InputTextModule} from '../inputtext/inputtext';\nimport {DomHandler} from '../dom/domhandler';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const CHIPS_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Chips),\n  multi: true\n};\n\n@Component({\n    selector: 'p-chips',\n    template: `\n        <div [ngClass]=\"'ui-chips ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul [ngClass]=\"{'ui-inputtext ui-state-default ui-corner-all':true,'ui-state-focus':focus,'ui-state-disabled':disabled}\" (click)=\"inputtext.focus()\">\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"ui-chips-token ui-state-highlight ui-corner-all\">\n                    <span *ngIf=\"!disabled\" class=\"ui-chips-token-icon fa fa-fw fa-close\" (click)=\"removeItem($event,i)\"></span>\n                    <span *ngIf=\"!itemTemplate\" class=\"ui-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <ng-template *ngIf=\"itemTemplate\" [pTemplateWrapper]=\"itemTemplate\" [item]=\"item\"></ng-template>\n                </li>\n                <li class=\"ui-chips-input-token\">\n                    <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"placeholder\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event,inputtext)\" \n                        (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"maxedOut||disabled\" [disabled]=\"disabled\">\n                </li>\n            </ul>\n        </div>\n    `,\n    providers: [DomHandler,CHIPS_VALUE_ACCESSOR]\n})\nexport class Chips implements AfterContentInit,ControlValueAccessor {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() disabled: boolean;\n\n    @Output() onAdd: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\n    \n    @Input() field: string;\n    \n    @Input() placeholder: string;\n    \n    @Input() max: number;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    public itemTemplate: TemplateRef<any>;\n        \n    value: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    valueChanged: boolean;\n    \n    focus: boolean;\n            \n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\n    \n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n                \n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    resolveFieldData(data: any, field: string): any {\n        if(data && field) {\n            if(field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                let fields: string[] = field.split('.');\n                let value = data;\n                for(var i = 0, len = fields.length; i < len; ++i) {\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    \n    onFocus() {\n        this.focus = true;\n    }\n    \n    onBlur() {\n        this.focus = false;\n        this.onModelTouched();\n    }\n    \n    removeItem(event: Event, index: number): void {\n        if(this.disabled) {\n            return;\n        }\n        \n        let removedItem = this.value[index];\n        this.value = this.value.filter((val, i) => i!=index);\n        this.onModelChange(this.value);\n        this.onRemove.emit({\n            originalEvent: event,\n            value: removedItem\n        });\n    }\n    \n    onKeydown(event: KeyboardEvent, inputEL: HTMLInputElement): void {\n        switch(event.which) {\n            //backspace\n            case 8:\n                if(inputEL.value.length === 0 && this.value && this.value.length > 0) {\n                    this.value = [...this.value];\n                    let removedItem = this.value.pop();\n                    this.onModelChange(this.value);\n                    this.onRemove.emit({\n                        originalEvent: event,\n                        value: removedItem\n                    });\n                }\n            break;\n            \n            //enter\n            case 13:\n                this.value = this.value||[];\n                if(inputEL.value && inputEL.value.trim().length && (!this.max||this.max > this.value.length)) {\n                    this.value = [...this.value,inputEL.value];\n                    this.onModelChange(this.value);\n                    this.onAdd.emit({\n                        originalEvent: event,\n                        value: inputEL.value\n                    });\n                }     \n                inputEL.value = '';\n                event.preventDefault();\n            break;\n            \n            default:\n                if(this.max && this.value && this.max === this.value.length) {\n                    event.preventDefault();\n                }\n            break;\n        }\n    }\n    \n    get maxedOut(): boolean {\n        return this.max && this.value && this.max === this.value.length;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule,SharedModule],\n    exports: [Chips,InputTextModule,SharedModule],\n    declarations: [Chips]\n})\nexport class ChipsModule { }"]}