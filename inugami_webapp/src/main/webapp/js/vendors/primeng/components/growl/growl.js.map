{"version":3,"file":"growl.js","sourceRoot":"","sources":["growl.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,ViewChild,EventEmitter} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Message} from '../common/api';\nimport {DomHandler} from '../dom/domhandler';\n\n@Component({\n    selector: 'p-growl',\n    template: `\n        <div #container [ngClass]=\"'ui-growl ui-widget'\" [style.zIndex]=\"zIndex\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div #msgel *ngFor=\"let msg of value;let i = index\" class=\"ui-growl-item-container ui-state-highlight ui-corner-all ui-shadow\" aria-live=\"polite\"\n                [ngClass]=\"{'ui-growl-message-info':msg.severity == 'info','ui-growl-message-warn':msg.severity == 'warn',\n                    'ui-growl-message-error':msg.severity == 'error','ui-growl-message-success':msg.severity == 'success'}\">\n                <div class=\"ui-growl-item\">\n                     <div class=\"ui-growl-icon-close fa fa-close\" (click)=\"remove(i,msgel)\"></div>\n                     <span class=\"ui-growl-image fa fa-2x\"\n                        [ngClass]=\"{'fa-info-circle':msg.severity == 'info','fa-exclamation-circle':msg.severity == 'warn',\n                                'fa-close':msg.severity == 'error','fa-check':msg.severity == 'success'}\"></span>\n                     <div class=\"ui-growl-message\">\n                        <span class=\"ui-growl-title\">{{msg.summary}}</span>\n                        <p [innerHTML]=\"msg.detail\"></p>\n                     </div>\n                     <div style=\"clear: both;\"></div>\n                </div>\n            </div>\n        </div>\n    `,\n    providers: [DomHandler]\n})\nexport class Growl implements AfterViewInit,OnDestroy {\n\n    @Input() sticky: boolean = false;\n\n    @Input() life: number = 3000;\n        \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n    \n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n    \n    @ViewChild('container') containerViewChild: ElementRef;\n    \n    _value: Message[];\n            \n    zIndex: number;\n    \n    container: HTMLDivElement;\n        \n    timeout: any;\n    \n    preventRerender: boolean;\n        \n    constructor(public el: ElementRef, public domHandler: DomHandler) {\n        this.zIndex = DomHandler.zindex;\n    }\n\n    ngAfterViewInit() {\n        this.container = <HTMLDivElement> this.containerViewChild.nativeElement;\n    }\n    \n    @Input() get value(): Message[] {\n        return this._value;\n    }\n\n    set value(val:Message[]) {\n        this._value = val;\n        if(this.container) {\n            this.handleValueChange();\n        }\n    }\n    \n    handleValueChange() {\n        if(this.preventRerender) {\n            this.preventRerender = false;\n            return;\n        }\n        \n        this.zIndex = ++DomHandler.zindex;\n        this.domHandler.fadeIn(this.container, 250);\n        \n        if(!this.sticky) {\n            if(this.timeout) {\n                clearTimeout(this.timeout);\n            }\n            this.timeout = setTimeout(() => {\n                this.removeAll();\n            }, this.life);\n        }\n    }\n        \n    remove(index: number, msgel: any) {        \n        this.domHandler.fadeOut(msgel, 250);\n        \n        setTimeout(() => {\n            this.preventRerender = true;\n            this.onClose.emit({message:this.value[index]});\n            this._value = this.value.filter((val,i) => i!=index);\n            this.valueChange.emit(this._value);\n        }, 250);        \n    }\n    \n    removeAll() {\n        if(this.value && this.value.length) {            \n            this.domHandler.fadeOut(this.container, 250);\n            \n            setTimeout(() => {                \n                this.value.forEach((msg,index) => this.onClose.emit({message:this.value[index]}));\n                this.value = [];\n                this.valueChange.emit(this.value);\n            }, 250);\n        }\n    }\n    \n    ngOnDestroy() {\n        if(!this.sticky) {\n            clearTimeout(this.timeout);\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Growl],\n    declarations: [Growl]\n})\nexport class GrowlModule { }"]}