{"version":3,"file":"animations-browser-testing.umd.js","sources":["../../../../packages/animations/browser/testing/src/mock_animation_driver.ts","../../../../packages/animations/browser/testing/src/testing.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationPlayer, NoopAnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../../src/render/animation_driver';\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationDriver implements AnimationDriver {\n  static log: AnimationPlayer[] = [];\n\n  animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = []): MockAnimationPlayer {\n    const player =\n        new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n    MockAnimationDriver.log.push(<AnimationPlayer>player);\n    return player;\n  }\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationPlayer extends NoopAnimationPlayer {\n  private __finished = false;\n  public previousStyles: {[key: string]: string | number} = {};\n  private _onInitFns: (() => any)[] = [];\n\n  constructor(\n      public element: any, public keyframes: {[key: string]: string | number}[],\n      public duration: number, public delay: number, public easing: string,\n      public previousPlayers: any[]) {\n    super();\n    previousPlayers.forEach(player => {\n      if (player instanceof MockAnimationPlayer) {\n        const styles = player._captureStyles();\n        Object.keys(styles).forEach(prop => { this.previousStyles[prop] = styles[prop]; });\n      }\n    });\n  }\n\n  /* @internal */\n  onInit(fn: () => any) { this._onInitFns.push(fn); }\n\n  /* @internal */\n  init() {\n    super.init();\n    this._onInitFns.forEach(fn => fn());\n    this._onInitFns = [];\n  }\n\n  finish(): void {\n    super.finish();\n    this.__finished = true;\n  }\n\n  destroy(): void {\n    super.destroy();\n    this.__finished = true;\n  }\n\n  private _captureStyles(): {[styleName: string]: string | number} {\n    const captures: ɵStyleData = {};\n\n    Object.keys(this.previousStyles).forEach(prop => {\n      captures[prop] = this.previousStyles[prop];\n    });\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {other styles within keyframes, ... previousStyles }\n      this.keyframes.forEach(kf => {\n        Object.keys(kf).forEach(prop => {\n          if (prop != 'offset') {\n            captures[prop] = this.__finished ? kf[prop] : AUTO_STYLE;\n          }\n        });\n      });\n    }\n\n    return captures;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {MockAnimationDriver, MockAnimationPlayer} from './mock_animation_driver';\n"],"names":["NoopAnimationPlayer","AUTO_STYLE"],"mappings":"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"}