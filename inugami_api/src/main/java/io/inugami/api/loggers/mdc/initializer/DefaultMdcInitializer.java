package io.inugami.api.loggers.mdc.initializer;

import io.inugami.api.monitoring.MdcService;

import java.io.Serializable;
import java.util.Map;

public class DefaultMdcInitializer implements MdcInitializerSpi {
    @Override
    public Map<String, Serializable> getDefaultValue() {
        return Map.ofEntries(
                buildEntry(MdcService.MDCKeys.env, DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.asset,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.hostname,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.instanceName,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.instanceNumber,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.correlation_id,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.request_id,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.conversation_id,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.sessionId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.applicationVersion,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceIdentifier,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceType,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceClass,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.version,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.majorVersion,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.osVersion,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceNetworkType,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceNetworkSpeedDown,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.deviceNetworkSpeedUp,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.deviceNetworkSpeedLatency,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.remoteAddress,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.deviceIp,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.userAgent,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.language,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.country,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.service,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.lifecycle,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.globalStatus,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.appService,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.appSubService,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorCode,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorCategory,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorStatus,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorMessage,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorType,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorMessageDetail,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorRetryable,DEFAULT_BOOLEAN),
                buildEntry(MdcService.MDCKeys.errorRollback,DEFAULT_BOOLEAN),
                buildEntry(MdcService.MDCKeys.errorUrl,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.errorExploitationError,DEFAULT_BOOLEAN),
                buildEntry(MdcService.MDCKeys.errorField,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.partner,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.partnerType,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.partnerService,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.partnerSubService,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.partnerUrl,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.exceptionName,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.duration,DEFAULT_LONG),
                buildEntry(MdcService.MDCKeys.functionalUid,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.methodInCause,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.uri,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.url,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.verb,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.httpStatus,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.principal,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.authProtocol,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.requestHeaders,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.responseHeaders,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.parentSpanId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.traceId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.flags,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.customerId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.userId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.productId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.orderId,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.reservationNumber,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.appClass,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.appClassShortName,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.appMethod,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.warning,DEFAULT_STRING),
                buildEntry(MdcService.MDCKeys.price,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.size,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.quantity,DEFAULT_DOUBLE),
                buildEntry(MdcService.MDCKeys.from,now()),
                buildEntry(MdcService.MDCKeys.fromTimestamp,DEFAULT_LONG),
                buildEntry(MdcService.MDCKeys.until,now()),
                buildEntry(MdcService.MDCKeys.untilTimestamp,DEFAULT_LONG)
        );
    }
}
