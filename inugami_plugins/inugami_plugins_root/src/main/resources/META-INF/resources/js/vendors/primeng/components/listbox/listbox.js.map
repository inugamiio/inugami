{"version":3,"file":"listbox.js","sourceRoot":"","sources":["listbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,AfterContentInit,ContentChildren,QueryList,TemplateRef,IterableDiffers,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectItem} from '../common/api';\nimport {SharedModule,PrimeTemplate} from '../common/shared';\nimport {DomHandler} from '../dom/domhandler';\nimport {ObjectUtils} from '../utils/ObjectUtils';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const LISTBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n\n@Component({\n    selector: 'p-listbox',\n    template: `\n        <div [ngClass]=\"{'ui-listbox ui-inputtext ui-widget ui-widget-content ui-corner-all':true,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-widget-header ui-corner-all ui-listbox-header ui-helper-clearfix\" *ngIf=\"(checkbox && multiple) || filter\">\n                <div class=\"ui-chkbox ui-widget\" *ngIf=\"checkbox && multiple\">\n                    <div class=\"ui-helper-hidden-accessible\">\n                        <input #cb type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\">\n                    </div>\n                    <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-active':allChecked}\" (click)=\"toggleAll($event,cb)\">\n                        <span class=\"ui-chkbox-icon ui-c\" [ngClass]=\"{'fa fa-check':allChecked}\"></span>\n                    </div>\n                </div>\n                <div class=\"ui-listbox-filter-container\" *ngIf=\"filter\">\n                    <input type=\"text\" role=\"textbox\" (input)=\"onFilter($event)\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [disabled]=\"disabled\">\n                    <span class=\"fa fa-search\"></span>\n                </div>\n            </div>\n            <ul class=\"ui-listbox-list\">\n                <li *ngFor=\"let option of options; let i = index;\" [style.display]=\"isItemVisible(option) ? 'block' : 'none'\"\n                    [ngClass]=\"{'ui-listbox-item ui-corner-all':true,'ui-state-highlight':isSelected(option)}\"\n                    (click)=\"onOptionClick($event,option)\" (dblclick)=\"onDoubleClick($event,option)\" (touchend)=\"onOptionTouchEnd($event,option)\">\n                    <div class=\"ui-chkbox ui-widget\" *ngIf=\"checkbox && multiple\" (click)=\"onCheckboxClick($event,option)\">\n                        <div class=\"ui-helper-hidden-accessible\">\n                            <input type=\"checkbox\" [checked]=\"isSelected(option)\" [disabled]=\"disabled\">\n                        </div>\n                        <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-active':isSelected(option)}\">\n                            <span class=\"ui-chkbox-icon ui-c\" [ngClass]=\"{'fa fa-check':isSelected(option)}\"></span>\n                        </div>\n                    </div>\n                    <span *ngIf=\"!itemTemplate\">{{option.label}}</span>\n                    <ng-template *ngIf=\"itemTemplate\" [pTemplateWrapper]=\"itemTemplate\" [item]=\"option\" [index]=\"i\"></ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    providers: [DomHandler,ObjectUtils,LISTBOX_VALUE_ACCESSOR]\n})\nexport class Listbox implements AfterContentInit,ControlValueAccessor {\n\n    @Input() options: SelectItem[];\n\n    @Input() multiple: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() disabled: boolean;\n\n    @Input() checkbox: boolean = false;\n\n    @Input() filter: boolean = false;\n    \n    @Input() metaKeySelection: boolean = true;\n    \n    @Input() dataKey: string;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDblClick: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    public itemTemplate: TemplateRef<any>;\n\n    public filterValue: string;\n    \n    public visibleOptions: SelectItem[];\n\n    public filtered: boolean;\n\n    public value: any;\n\n    public onModelChange: Function = () => { };\n\n    public onModelTouched: Function = () => { };\n\n    public checkboxClick: boolean;\n    \n    public optionTouched: boolean;\n\n    constructor(public el: ElementRef, public domHandler: DomHandler, public objectUtils: ObjectUtils) {}\n    \n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n                \n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n\n    onOptionClick(event, option) {\n        if(this.disabled) {\n            return;\n        }\n        \n        if(!this.checkboxClick) {\n            if(this.multiple)\n                this.onOptionClickMultiple(event, option);\n            else\n                this.onOptionClickSingle(event, option);\n        }\n        else {\n            this.checkboxClick = false;\n        }\n        \n        this.optionTouched = false;\n    }\n    \n    onOptionTouchEnd(event, option) {\n        if(this.disabled) {\n            return;\n        }\n        \n        this.optionTouched = true;\n    }\n\n    onOptionClickSingle(event, option) {        \n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n        if(metaSelection) {\n            let metaKey = (event.metaKey || event.ctrlKey);\n            \n            if(selected) {\n                if(metaKey) {\n                    this.value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                this.value = option.value;\n                valueChanged = true;\n            }\n        }\n        else {\n            this.value = selected ? null : option.value;            \n            valueChanged = true;\n        }\n\n        if(valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n\n    onOptionClickMultiple(event, option) {        \n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n        if(metaSelection) {\n            let metaKey = (event.metaKey || event.ctrlKey);\n            \n            if(selected) {\n                if(metaKey) {\n                    this.removeOption(option);\n                }\n                else {\n                    this.value = [option.value];\n                }\n                valueChanged = true;\n            }\n            else {\n                this.value = (metaKey) ? this.value || [] : [];\n                this.value = [...this.value, option.value];\n                valueChanged = true;\n            }\n        }\n        else {\n            if(selected) {\n                this.removeOption(option);\n            }\n            else {\n                this.value = [...this.value||[],option.value];\n            }\n            \n            valueChanged = true;\n        }\n\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    \n    removeOption(option: any): void {\n        this.value = this.value.filter(val => !this.objectUtils.equals(val, option.value, this.dataKey));\n    }\n\n    isSelected(option: SelectItem) {\n        let selected = false;\n\n        if(this.multiple) {\n            if(this.value) {\n                for(let val of this.value) {\n                    if(this.objectUtils.equals(val, option.value, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = this.objectUtils.equals(this.value, option.value, this.dataKey);\n        }\n\n        return selected;\n    }\n\n    get allChecked(): boolean {\n        if(this.filterValue && this.filterValue.trim().length)\n            return this.allFilteredSelected();\n        else\n            return this.value&&this.options&&(this.value.length == this.options.length);\n    }\n    \n    allFilteredSelected(): boolean {\n        let allSelected: boolean;\n        if(this.value && this.visibleOptions && this.visibleOptions.length) {\n            allSelected = true;\n            for(let opt of this.visibleOptions) {\n                let selected: boolean;\n                for(let val of this.value) {\n                    if(this.objectUtils.equals(val, opt.value, this.dataKey)) {\n                        selected = true;\n                    }\n                }\n                \n                if(!selected) {\n                    allSelected = false;\n                    break;\n                }\n            }\n        }\n                \n        return allSelected;\n    }\n\n    onFilter(event) {\n        this.filterValue = event.target.value.trim().toLowerCase();\n        this.visibleOptions = [];\n        for(let i = 0; i < this.options.length; i++) {\n            let option = this.options[i];\n            if(option.label.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1) {\n                this.visibleOptions.push(option);\n            }\n        }\n        this.filtered = true;\n    }\n\n    toggleAll(event, checkbox) {\n        if(this.disabled || (this.filterValue && this.filterValue.trim().length && (!this.visibleOptions || this.visibleOptions.length === 0))) {\n            return;\n        }\n        \n        if(checkbox.checked) {\n            this.value = [];\n        }\n        else {\n            let opts = (this.visibleOptions&&this.visibleOptions.length) ? this.visibleOptions : this.options;\n            if(opts) {\n                this.value = [];\n                for(let i = 0; i < opts.length; i++) {\n                    this.value.push(opts[i].value);\n                } \n            }\n        }\n        checkbox.checked = !checkbox.checked;\n        this.onModelChange(this.value);\n        this.onChange.emit({originalEvent: event, value: this.value});\n    } \n\n    isItemVisible(option: SelectItem): boolean {\n        if(this.filterValue && this.filterValue.trim().length) {\n            for(let i = 0; i < this.visibleOptions.length; i++) {\n                if(this.visibleOptions[i].value == option.value) {\n                    return true;\n                }\n            }\n        }\n        else {\n            return true;\n        }\n    }\n\n    onDoubleClick(event: Event, option: SelectItem): any {\n        if(this.disabled) {\n            return;\n        }\n        \n        this.onDblClick.emit({\n            originalEvent: event,\n            value: this.value\n        })\n    }\n    \n    onCheckboxClick(event: Event, option: SelectItem) {\n        if(this.disabled) {\n            return;\n        }\n        \n        this.checkboxClick = true;\n        let selected = this.isSelected(option);\n\n        if(selected) {\n            this.removeOption(option);\n        }\n        else {\n            this.value = this.value ? this.value : [];\n            this.value = [...this.value,option.value];\n        }\n\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, SharedModule],\n    exports: [Listbox, SharedModule],\n    declarations: [Listbox]\n})\nexport class ListboxModule { }\n"]}