!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@angular/core"),require("@angular/router"),require("@angular/upgrade/static")):"function"==typeof define&&define.amd?define("@angular/router/upgrade",["exports","@angular/common","@angular/core","@angular/router","@angular/upgrade/static"],r):r(((e=e||self).ng=e.ng||{},e.ng.router=e.ng.router||{},e.ng.router.upgrade={}),e.ng.common,e.ng.core,e.ng.router,e.ng.upgrade.static)}(this,function(e,r,t,a,n){"use strict";var o,i=c,u={provide:t.APP_BOOTSTRAP_LISTENER,multi:!0,useFactory:i,deps:[n.UpgradeModule]};function c(e){return function(){s(e)}}function s(e,i){if(void 0===i&&(i="path"),!e.$injector)throw new Error("\n        RouterUpgradeInitializer can be used only after UpgradeModule.bootstrap has been called.\n        Remove RouterUpgradeInitializer and call setUpLocationSync after UpgradeModule.bootstrap.\n      ");var u=e.injector.get(a.Router),c=e.injector.get(r.Location);e.$injector.get("$rootScope").$on("$locationChangeStart",function(e,r,t){var a;if("path"===i)a=g(r);else{if("hash"!==i)throw"Invalid URLType passed to setUpLocationSync: "+i;var n=r.indexOf("#");a=g(r.substring(0,n)+r.substring(n+1))}var o=c.normalize(a.pathname);u.navigateByUrl(o+a.search+a.hash)})}function g(e){return(o=o||document.createElement("a")).setAttribute("href",e),o.setAttribute("href",o.href),{pathname:"/"+o.pathname.replace(/^\//,""),search:o.search,hash:o.hash}}e.RouterUpgradeInitializer=u,e.locationSyncBootstrapListener=c,e.setUpLocationSync=s,e.Éµ0=i,Object.defineProperty(e,"__esModule",{value:!0})});