{"version":3,"file":"selectbutton.js","sourceRoot":"","sources":["selectbutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectItem} from '../common/api';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SELECTBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-selectButton',\n    template: `\n        <div [ngClass]=\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + options.length\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div *ngFor=\"let option of options;\" class=\"ui-button ui-widget ui-state-default ui-button-text-only\"\n                [ngClass]=\"{'ui-state-active':isSelected(option), 'ui-state-disabled':disabled, 'ui-state-focus': cbox == focusedItem}\" (click)=\"onItemClick($event,option,cbox)\">\n                <span class=\"ui-button-text ui-c\">{{option.label}}</span>\n                <div class=\"ui-helper-hidden-accessible\">\n                    <input #cbox type=\"checkbox\" [checked]=\"isSelected(option)\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [attr.tabindex]=\"tabindex\" [attr.disabled]=\"disabled\">\n                </div>\n            </div>\n        </div>\n    `,\n    providers: [SELECTBUTTON_VALUE_ACCESSOR]\n})\nexport class SelectButton implements ControlValueAccessor {\n\n    @Input() options: SelectItem[];\n\n    @Input() tabindex: number;\n\n    @Input() multiple: boolean;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() disabled: boolean;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    value: any;\n    \n    focusedItem: HTMLInputElement;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    writeValue(value: any) : void {\n        this.value = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onItemClick(event, option: SelectItem, checkbox: HTMLInputElement) {\n        if(this.disabled) {\n            return;\n        }\n        \n        checkbox.focus();\n        \n        if(this.multiple) {\n            let itemIndex = this.findItemIndex(option);\n            if(itemIndex != -1)\n                this.value = this.value.filter((val,i) => i!=itemIndex);\n            else\n                this.value = [...this.value||[], option.value];\n        }\n        else {\n            this.value = option.value;\n        }\n        \n        this.onModelChange(this.value);\n        \n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    \n    onFocus(event: Event) {\n        this.focusedItem = <HTMLInputElement>event.target;\n    }\n    \n    onBlur(event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    }\n    \n    isSelected(option: SelectItem) {\n        if(this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return option.value == this.value;\n    }\n    \n    findItemIndex(option: SelectItem) {\n        let index = -1;\n        if(this.value) {\n            for(let i = 0; i < this.value.length; i++) {\n                if(this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SelectButton],\n    declarations: [SelectButton]\n})\nexport class SelectButtonModule { }\n"]}