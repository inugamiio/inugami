{"version":3,"file":"spinner.js","sourceRoot":"","sources":["spinner.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InputTextModule} from '../inputtext/inputtext';\nimport {DomHandler} from '../dom/domhandler';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SPINNER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Spinner),\n  multi: true\n};\n\n@Component({\n    selector: 'p-spinner',\n    template: `\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\n            <input #in type=\"text\" [attr.id]=\"inputId\" class=\"ui-spinner-input\" [value]=\"valueAsString\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\"\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\"\n            (keydown)=\"onInputKeydown($event)\" (keyup)=\"onInput($event,in.value)\" (keypress)=\"onInputKeyPress($event)\" (blur)=\"onInputBlur($event)\" (change)=\"handleChange($event)\" (focus)=\"onFocus()\">\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled\"\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event,in)\" (mouseup)=\"onUpButtonMouseup($event)\">\n                <span class=\"fa fa-caret-up\"></span>\n            </button>\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled\"\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event,in)\" (mouseup)=\"onDownButtonMouseup($event)\">\n                <span class=\"fa fa-caret-down\"></span>\n            </button>\n        </span>\n    `,\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    providers: [DomHandler,SPINNER_VALUE_ACCESSOR],\n})\nexport class Spinner implements OnInit,ControlValueAccessor {\n        \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Input() step: number = 1;\n\n    @Input() min: number;\n\n    @Input() max: number;\n    \n    @Input() maxlength: number;\n    \n    @Input() size: number;\n\n    @Input() placeholder: string;\n\n    @Input() inputId: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() readonly: boolean;\n    \n    @Input() decimalSeparator: string = '.';\n    \n    @Input() thousandSeparator: string = ',';\n\n    @Input() tabindex: number;\n    \n    @Input() formatInput: boolean = true;\n            \n    value: number;\n    \n    valueAsString: string = '';\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    keyPattern: RegExp = /[0-9\\+\\-]/;\n        \n    public precision: number;\n    \n    public timer: any;\n        \n    public focus: boolean;\n    \n    public filled: boolean;\n    \n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\n    \n    ngOnInit() {\n        if(Math.floor(this.step) === 0) {\n            this.precision = this.step.toString().split(/[,]|[.]/)[1].length;\n        }\n    }\n    \n    repeat(interval: number, dir: number) {\n        let i = interval||500;\n\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(40, dir);\n        }, i);\n\n        this.spin(dir);\n    }\n    \n    spin(dir: number) {\n        let step = this.step * dir;\n        let currentValue = this.value||0;\n        let newValue: number = null;\n        \n        if(this.precision)\n            this.value = parseFloat(this.toFixed(currentValue + step, this.precision));\n        else\n            this.value = currentValue + step;\n    \n        if(this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\n            this.value = currentValue;\n        }\n    \n        if(this.min !== undefined && this.value < this.min) {\n            this.value = this.min;\n        }\n\n        if(this.max !== undefined && this.value > this.max) {\n            this.value = this.max;\n        }\n        \n        this.formatValue();\n        this.onModelChange(this.value);\n        this.onChange.emit();\n    }\n    \n    toFixed(value: number, precision: number) {\n        let power = Math.pow(10, precision||0);\n        return String(Math.round(value * power) / power);\n    }\n    \n    onUpButtonMousedown(event: Event,input: HTMLInputElement) {\n        if(!this.disabled) {\n            input.focus();\n            this.repeat(null, 1);\n            this.updateFilledState();\n        }\n    }\n    \n    onUpButtonMouseup(event: Event) {\n        if(!this.disabled) {\n            this.clearTimer();\n        }        \n    }\n        \n    onUpButtonMouseleave(event: Event) {\n        if(!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onDownButtonMousedown(event: Event, input: HTMLInputElement) {\n        if(!this.disabled) {\n            input.focus();\n            this.repeat(null, -1);\n            this.updateFilledState();\n        }\n    }\n    \n    onDownButtonMouseup(event: Event) {\n        if(!this.disabled) {\n            this.clearTimer();\n        }\n    }\n        \n    onDownButtonMouseleave(event: Event) {\n        if(!this.disabled) {\n            this.clearTimer();\n        }\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {  \n        if(event.which == 38) {\n            this.spin(1);\n            event.preventDefault();\n        }\n        else if(event.which == 40) {\n            this.spin(-1);\n            event.preventDefault();\n        }\n    }\n    \n    onInputKeyPress(event: KeyboardEvent) {\n        let inputChar = String.fromCharCode(event.charCode);\n        if(!this.keyPattern.test(inputChar) && inputChar != this.decimalSeparator && event.keyCode != 9 && event.keyCode != 8 && event.keyCode != 37 && event.keyCode != 39 && event.keyCode != 46) {\n            event.preventDefault();\n        }    \n    }\n\n    onInput(event: Event, inputValue: string) {\n        this.value = this.parseValue(inputValue);\n        this.formatValue();       \n        this.onModelChange(this.value);\n        this.updateFilledState();\n    }\n    \n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    \n    onFocus() {\n        this.focus = true;\n    }\n    \n    parseValue(val: string): number {\n        let value: number;\n        \n        if(this.formatInput) {\n            val = val.split(this.thousandSeparator).join('');\n        }\n        \n        if(val.trim() === '') {\n            value= this.min !== undefined ? this.min : null;\n        }\n        else {        \n            if(this.precision) {\n                value = parseFloat(val.replace(',','.'));\n            }\n            else {\n                value = parseInt(val);\n            }\n                            \n            if(!isNaN(value)) {\n                if(this.max !== undefined && value > this.max) {\n                    value = this.max;\n                }\n                \n                if(this.min !== undefined && value < this.min) {\n                    value = this.min;\n                }\n            }\n            else {\n                value = null;\n            }\n        }\n        \n        return value;\n    }\n    \n    formatValue(): void {\n        if(this.value !== null && this.value !== undefined) {\n            let textValue = String(this.value).replace('.', this.decimalSeparator);\n            \n            if(this.formatInput) {\n                textValue = textValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandSeparator);\n            }\n            this.valueAsString = textValue;\n        }\n        else {\n            this.valueAsString = '';\n        }\n    }\n    \n    handleChange(event: Event) {\n        this.onChange.emit(event);\n    }\n        \n    clearTimer() {\n        if(this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;    \n        this.formatValue();    \n        this.updateFilledState();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    updateFilledState() {\n        this.filled = (this.value !== undefined && this.value != null);\n    }\n}\n\n\n@NgModule({\n    imports: [CommonModule,InputTextModule],\n    exports: [Spinner],\n    declarations: [Spinner]\n})\nexport class SpinnerModule { }\n"]}